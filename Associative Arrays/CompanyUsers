// Create a program that keeps information about companies and their employees. 
// You will be receiving a company name and an employee's id, until you receive the "End" command. Add each employee to the given company. 
// Keep in mind that a company cannot have two employees with the same id.
// When you finish reading the data, print the company's name and each employee's id in the following format:
// { companyName}
// -- { id1}
// -- { id2}
// -- { idN}
// Input / Constraints
// •	Until you receive the "End" command, you will be receiving input in the format: "{companyName} -> {employeeId}".
// •	The input always will be valid.

//     Input:
// SoftUni -> AA12345
// SoftUni -> BB12345
// Microsoft -> CC12345
// HP -> BB12345
// End
//     Output:
// SoftUni
// -- AA12345
// -- BB12345
// Microsoft
// -- CC12345
// HP
// -- BB12345


namespace CompanyUsers
{
    class Program
    {
        static void Main(string[] args)
        {
            string command = default;
            Dictionary <string,Company> companies = new Dictionary <string,Company> ();
            while((command = Console.ReadLine()) != "End")
            {
                string[] input = command.Split(" -> ").ToArray();
                string name = input[0];
                string employee = input[1];

                if (!companies.ContainsKey(name))
                {
                    companies.Add(name, new Company(name));
                }

                if (!companies[name].Employees.Contains(employee))
                {
                    companies[name].Employees.Add(employee);
                }
            }
            foreach (var KVP in companies)
            {
                Console.WriteLine(KVP.Value);
            }
        }
    }

   class Company
   {
        public string Name;
        public List<string> Employees;

        public Company(string name)
        {
            Name = name;
            Employees = new List<string>();
        }

        public override string ToString()
        {
            string result = $"{Name}\n";
             
            for (int i = 0; i < Employees.Count; i++)
            {
                result += $"-- {Employees[i]}\n";
            }
            return result.Trim();
        }
    }
}
